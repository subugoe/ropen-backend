<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Ropen Backend" xmlns:xdb="http://exist-db.org/ant">
    <!-- 
    #######################################################
    # Imports, used Salvador Modules 
    #######################################################
    -->
    <import file="./build/build.xml"/>
    <import file="./build/modules/exist.xml"/>


    <!-- 
    #######################################################
    # Settings
    #######################################################
    -->
    <!-- Login data, this is usually stored in exist.properties. You can also uncommnt these lines and use the Ant file-->
    <!--
    <property name="exist.url" value=""/>
    <property name="exist.user" value=""/>
    <property name="exist.pass" value=""/>
    -->
    <property name="exist.properties.file" value="./exist.properties"/>
    
    <!-- Paths should start with a slash (/) but not end with one -->
    <!-- Paths inside the database -->
    <property name="exist.remote.base" value="/exist/xmlrpc"/>
    <property name="exist.remote.ropen" value="/db/archaeo18"/>
    
    <!-- Local paths -->
    <property name="exist.local.base" value="./src/main"/>
    <property name="exist.local.base.xquery" value="${exist.local.base}/xquery"/>
    <property name="exist.local.base.xslt" value="${exist.local.base}/xslt"/>
    <property name="exist.local.backup" value="${target.dir}/backup"/>
    <property name="exist.local.restore" value="${target.dir}/backup"/>

    <!-- Computed Properties -->


    <!-- 
    #######################################################
    # Targets needed by the build system 
    #######################################################
    -->

    <!-- Simple help -->
    <target name="help" description="Prints some help">
        <echo>ant help - This help</echo>
        <echo>ant exist.properties - creates a empty property file for the login date (warning: overwrites existing file)</echo>
    </target>

    <!-- Creates the needed directories, reads properties -->
    <target name="init" depends="salvador.base.ant.contrib.install">
        <!-- Let the user override propeties, usefull for passwords etc. -->
        <!-- See http://ant.apache.org/manual/Tasks/property.html -->
        <property file="${exist.properties.file}"/>
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${exist.local.base}"/>
        <mkdir dir="${exist.local.xquery}"/>
        <mkdir dir="${exist.local.xslt}"/>
    </target>

    <target name="exist.properties">
        <echo append="false" encoding="UTF-8" file="${exist.properties.file}" message="exist.url=${line.separator}exist.user=${line.separator}exist.pass="/>
    </target>

    <!-- 
    #######################################################
    # eXist sync
    #######################################################
    -->
    <!--  Checks if login data is present, and contructs exist URL -->
    <target name="init.exist" depends="init">
        <echo>Checking eXist login data</echo>
        <fail message="eXist login data not set!">
            <condition>
                <or>
                    <equals arg1="${exist.url}" arg2=""/>
                    <not>
                        <isset property="exist.url"/>
                    </not>
                    <equals arg1="${exist.user}" arg2=""/>
                    <not>
                        <isset property="exist.user"/>
                    </not>
                    <equals arg1="${exist.pass}" arg2=""/>
                    <not>
                        <isset property="exist.pass"/>
                    </not>
                </or>
            </condition>
        </fail>
        <!-- Replace http:// with xmldb:exist:// need property regex for this -->
        <!-- Be sure not do use multiple slashes here -->
        <propertyregex property="exist.base.uri" input="${exist.url}${exist.remote.base}" regexp="http://(.*)" select="xmldb:exist://\1" casesensitive="false"/>
        <echo message="eXist base set to ${exist.base.uri}"/>
        <!-- Create directories -->
        <mkdir dir="${exist.local.backup}"/>
    </target>

    <!-- This is needed to sync the Git repository with the current developments made inside the database itself -->
    <target name="server.extract" depends="init.exist, salvador.exist.install">
        <property name="ropen.url" value="${exist.base.uri}${exist.remote.ropen}"></property>
        <echo>Exracting Ropen Backend from ${ropen.url}</echo>
        <!-- This doesn't preserve file names, don't use it -->
        <!--
        <xdb:extract uri="${exist.base.uri}${exist.remote.ropen}" destdir="${exist.local.base}" subcollections="true" createdirectories="true" overwrite="true" user="${exist.user}" password="${exist.pass}"/>
        -->
        <!-- Create a backup, clean it from eXist collection metadata and copy it to the source tree -->
        <antcall target="server.backup"/>
        <copy todir="${exist.local.base.xquery}">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/*.xq"/>
                <include name="**/*.xquery"/>
                <include name="**/*.xqm"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
        <copy todir="${exist.local.base.xslt}">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/*.xsl"/>
                <include name="**/*.xslt"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="server.backup" depends="init.exist, salvador.exist.install">

        <xdb:backup  uri="${exist.base.uri}${exist.remote.ropen}" dir="${exist.local.backup}" user="${exist.user}" password="${exist.pass}"/>

    </target>
    
    <target name="server.restore" depends="init.exist, salvador.exist.install">
        
        <xdb:restore  uri="${exist.base.uri}${exist.remote.ropen}" dir="${exist.local.backup}" user="${exist.user}" password="${exist.pass}"/>
        
    </target>
    <!-- 
        TODO: Missing Targets:
        * Upload to the Database
        * create EXPath Package for easy deployment 
        * Maybe start exist inside Jetty for a live demo
    -->

</project>
