<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Ropen Backend" xmlns:xdb="http://exist-db.org/ant">
    <!-- 
    #######################################################
    # Imports, used Salvador Modules 
    #######################################################
    -->
    <import file="./build/build.xml"/>
    <import file="./build/modules/exist.xml"/>
    <import file="./build/modules/http.xml"/>
    <import file="./build/modules/saxon.xml"/>
    <!--
    <import file="./build/modules/xspec.xml"/>
    -->
    <import file="./build/modules/xml.xml"/>

    <!-- 
    #######################################################
    # Settings
    #######################################################
    -->
    <!-- Login data, this is usually stored in exist.properties. You can also uncommnt these lines and use the Ant file-->
    <!--
    <property name="exist.url" value=""/>
    <property name="exist.user" value=""/>
    <property name="exist.pass" value=""/>
    -->
    <property name="exist.properties.file" value="./exist.properties"/>

    <!-- Paths should start with a slash (/) but not end with one -->
    <!-- Paths inside the database -->
    <property name="exist.remote.base.xmlrpc" value="/exist/xmlrpc"/>
    <property name="exist.remote.base.rest" value="/exist/rest"/>
    <property name="exist.remote.ropen" value="/db/archaeo18"/>
    <property name="exist.remote.upload" value="/queries/upload.xq"/>

    <!-- Local paths -->
    <property name="exist.local.base" value="./src/main"/>
    <property name="exist.local.base.xquery" value="${exist.local.base}/xquery"/>
    <property name="exist.local.base.xslt" value="${exist.local.base}/xslt"/>
    <property name="exist.local.base.odd" value="${exist.local.base}/odd"/>
    <property name="exist.local.base.resources" value="${exist.local.base}/resources"/>
    <property name="exist.local.backup" value="${target.dir}/backup"/>
    <property name="exist.local.restore" value="${target.dir}/backup"/>
    <property name="exist.local.deploy" value="${target.dir}/deploy"/>
    <property name="exist.local.docs" value="${target.dir}/docs"/>

    <!-- Deployment settings -->
    <property name="ropen.xar.file" value="${target.dir}/ropen.xar"/>

    <!-- Properties of local eXist database -->

    <!-- 
    #######################################################
    # Targets needed by the build system 
    #######################################################
    -->

    <!-- Simple help -->
    <target name="help" description="Prints some help">
        <echo>ant help - This help</echo>
        <echo>ant exist.properties - creates a empty property file for the login date (warning: overwrites existing file)</echo>
        <echo>ant server.extract - extracts the contents of the database and puts the code (XQuery and XSLT under src)</echo>
        <echo>ant xar - create a Xar archive</echo>
    </target>

    <!-- Creates the needed directories, reads properties -->
    <target name="init" depends="salvador.base.ant.contrib.install">
        <!-- Let the user override propeties, usefull for passwords etc. -->
        <!-- See http://ant.apache.org/manual/Tasks/property.html -->
        <property file="${exist.properties.file}"/>
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${exist.local.base}"/>
        <mkdir dir="${exist.local.base.xquery}"/>
        <mkdir dir="${exist.local.base.xslt}"/>
        <mkdir dir="${exist.local.base.odd}"/>
        <mkdir dir="${exist.local.base.resources}"/>
    </target>

    <target name="clean" depends="salvador.base.clean">
        <delete dir="${target.dir}"/>
    </target>

    <target name="exist.properties">
        <echo append="false" encoding="UTF-8" file="${exist.properties.file}" message="exist.url=${line.separator}exist.user=${line.separator}exist.pass="/>
    </target>

    <!-- 
    #######################################################
    # eXist sync
    #######################################################
    -->
    <!--  Checks if login data is present, and contructs exist URL -->
    <target name="init.exist" depends="init">
        <echo>Checking eXist login data</echo>
        <fail message="eXist login data not set!">
            <condition>
                <or>
                    <equals arg1="${exist.url}" arg2=""/>
                    <not>
                        <isset property="exist.url"/>
                    </not>
                    <equals arg1="${exist.user}" arg2=""/>
                    <not>
                        <isset property="exist.user"/>
                    </not>
                    <equals arg1="${exist.pass}" arg2=""/>
                    <not>
                        <isset property="exist.pass"/>
                    </not>
                </or>
            </condition>
        </fail>
        <!-- Replace http:// with xmldb:exist:// need property regex for this -->
        <!-- Be sure not do use multiple slashes here -->
        <propertyregex property="exist.base.uri" input="${exist.url}${exist.remote.base.xmlrpc}" regexp="http://(.*)" select="xmldb:exist://\1" casesensitive="false"/>
        <echo message="eXist base set to ${exist.base.uri}"/>
        <!-- Create directories -->
        <mkdir dir="${exist.local.backup}"/>
    </target>

    <!-- This is needed to sync the Git repository with the current developments made inside the database itself -->
    <target name="server.extract" depends="init.exist, salvador.exist.install, salvador.xml.install">
        <property name="ropen.url" value="${exist.base.uri}${exist.remote.ropen}"/>
        <property name="ropen.transformations" value="transformations/"/>
        <echo>Exracting Ropen Backend from ${ropen.url}</echo>
        <!-- This doesn't preserve file names, don't use it -->
        <!--
        <xdb:extract uri="${exist.base.uri}${exist.remote.ropen}" destdir="${exist.local.base}" subcollections="true" createdirectories="true" overwrite="true" user="${exist.user}" password="${exist.pass}"/>
        -->
        <!-- Create a backup, clean it from eXist collection metadata and copy it to the source tree -->
        <antcall target="server.backup"/>
        <echo>Splitting XQueries into ${exist.local.base.xquery}</echo>
        <copy todir="${exist.local.base.xquery}">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/*.xq"/>
                <include name="**/*.xquery"/>
                <include name="**/*.xqm"/>
                <!-- Exclude Configuration since it contains a Password, there is another target that cleans this file up. -->
                <exclude name="**/conf.xqm"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
        <echo>Splitting XSLT into ${exist.local.base.xslt}</echo>
        <!-- This is done by pretty printing  -->
        <!-- 
        <copy todir="${exist.local.base.xslt}">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/*.xsl"/>
                <include name="**/*.xslt"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
        -->
        <fileset dir="${exist.local.backup}${exist.remote.ropen}" id="xslt.files">
            <include name="**/*.xsl"/>
            <include name="**/*.xslt"/>
            <exclude name="**/__contents__.xml"/>
        </fileset>
        <salvador.xml.prettyprint.dir refid="xslt.files" todir="${exist.local.base.xslt}/${ropen.transformations}"/>
        <echo>Splitting Schema into ${exist.local.base.odd}</echo>
        <copy todir="${exist.local.base.odd}">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/*.odd"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
        <antcall target="server.extract.config"/>
    </target>

    <!-- Filter the user name and password from the configuration -->
    <target name="server.extract.config">
        <copy todir="${exist.local.base.xquery}" overwrite="true">
            <fileset dir="${exist.local.backup}${exist.remote.ropen}">
                <include name="**/conf.xqm"/>
            </fileset>
            <filterchain>
                <tokenfilter>
                    <containsregex pattern="^.*$" byline="true"/>
                    <replaceregex pattern="^(.*?)(\$archeao18conf:user\s?:=\s?')(.*)('\s?;)$" replace="\1\2\4" byline="true"/>
                    <replaceregex pattern="^(.*?)(\$archeao18conf:password\s?:=\s?')(.*)('\s?;)$" replace="\1\2\4" byline="true"/>
                </tokenfilter>
            </filterchain>
        </copy>
    </target>

    <target name="server.files">
        <!-- Build a directory with all files -->
        <mkdir dir="${exist.local.deploy}"/>
        <mkdir dir="${exist.local.deploy}/data"/>
        <copy todir="${exist.local.deploy}">
            <fileset dir="${exist.local.base.xslt}"/>
            <fileset dir="${exist.local.base.xquery}"/>
            <fileset dir="${exist.local.base.resources}"/>
            <fileset dir="${exist.local.base.odd}"/>
        </copy>
    </target>

    <target name="server.deploy" depends="init.exist, server.files, salvador.exist.install">
        <!-- Deploy -->
        <xdb:store uri="${exist.base.uri}${exist.remote.ropen}" user="${exist.user}" password="${exist.pass}" createcollection="true">
            <fileset dir="${exist.local.deploy}">
                <include name="*.xml"/>
                <include name="*.xsl"/>
                <include name="*.xslt"/>
                <include name="*.xq"/>
                <include name="*.xqm"/>
                <include name="*.xquery"/>
            </fileset>
        </xdb:store>
    </target>

    <target name="server.backup" depends="init.exist, salvador.exist.install">
        <echo>Creating Backup to ${exist.local.backup}</echo>
        <xdb:backup uri="${exist.base.uri}${exist.remote.ropen}" dir="${exist.local.backup}" user="${exist.user}" password="${exist.pass}"/>
    </target>

    <target name="server.restore" depends="init.exist, salvador.exist.install">
        <echo>Restoring from ${exist.local.backup}</echo>
        <xdb:restore uri="${exist.base.uri}${exist.remote.ropen}" dir="${exist.local.backup}" user="${exist.user}" password="${exist.pass}"/>
    </target>

    <target name="archeo18.upload" depends="init.exist, salvador.http.macros, salvador.base.ant.contrib.install">
        <echo>Installing Archaeo18 upload macro</echo>
        <!--
            The Ant HTTP Tasks don't work here, see:
            http://code.google.com/p/missing-link/issues/detail?id=32&colspec=ID%20Project%20Type%20Status%20Priority%20Milestone%20Owner%20Summary
        <macrodef name="archeo18.upload">
            <attribute name="url"/>
            <attribute name="src"/>
            <sequential>
                <http url="@{url}" method="POST" entityProperty="archaeo18.upload.result">
                    <credentials username="${exist.user}" password="${exist.pass}"/>
                    <entity file="@{src}" binary="true"/>
                </http>
            </sequential>
        </macrodef>
         -->
        <macrodef name="archeo18.upload">
            <attribute name="url"/>
            <attribute name="src"/>
            <sequential>
                <!-- Get the file name -->
                <var name="upload.filename" unset="true"/>
                <propertyregex property="upload.filename" input="@{src}" regexp="(.*)[\\/](.*\..*)$" select="\2" casesensitive="false"/>
                <echo>Uploading @{src} as ${upload.filename} to @{url}</echo>
                <!-- Post it -->
                <salvador.http.postfile url="@{url}" file="@{src}" name="${upload.filename}"/>
            </sequential>
        </macrodef>
    </target>

    <target name="server.upload.documents" depends="archeo18.upload">
        <property name="upload.url" value="${exist.url}${exist.remote.base.rest}${exist.remote.ropen}${exist.remote.upload}"/>
        <echo>Uploading files from ${exist.local.docs} to ${upload.url} (This will fail if one of the paths is missing)</echo>
        <for param="tei.file">
            <path>
                <fileset dir="${exist.local.docs}" includes="*.xml"/>
            </path>
            <sequential>
                <archeo18.upload src="@{tei.file}" url="${upload.url}"/>
            </sequential>
        </for>
    </target>

    <target name="xar" depends="server.files">
        <zip destfile="${ropen.xar.file}" basedir="${exist.local.deploy}" update="true"/>
    </target>

    <target name="serve" depends="salvador.exist.install, salvador.jetty.install"> </target>

    <target name="xquery.lint" depends="salvador.saxon.install">
        <property name="xquery.results.dir" value="${target.dir}/xquery-results"/>
        <mkdir dir="xquery.results.dir"/>
        <salvador.saxon.xquery query="${exist.local.base.xquery}/queries/modules/conf.xqm" destfile="${xquery.results.dir}/conf.xqm"/>
        <!-- exist.local.base.xquery -->

    </target>

    <!-- 
    <target name="xquery.test" depends="salvador.xspec.install">
        <salvador.xspec.xquery xspec.xml.xquery="./src/test/xspec/test.xml"/>
    </target>
    -->
    <!-- 
        TODO: Missing Targets:
        * Upload to the Database (XQueries, XSLT) - there but not testet
        * create EXPath Package for easy deployment  - started
        * Maybe start eXist inside Jetty for a live demo - a demo is part of Salvador
        * Upload documents - works here, but the server have some problems
    -->

</project>
